<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="300" d:DesignHeight="400"
			 xmlns:vm="using:DnDigital_1e.ViewModels"
			 xmlns:model="clr-namespace:DnDigital_1e.Models"
			 x:DataType="vm:MainWindowViewModel"
             x:Class="DnDigital_1e.Controls.LeftSubmenu">
	
	<Design.DataContext>
		<vm:MainWindowViewModel/>
	</Design.DataContext>
	
	<UserControl.DataContext>
		<vm:MainWindowViewModel/>
	</UserControl.DataContext>

	<UserControl.Styles>
		<Style Selector="Border">
			<Style Selector="^.Submenu">
				<Setter Property="HorizontalAlignment" Value="Stretch"/>
				<Setter Property="CornerRadius" Value="0"/>
				<Setter Property="Background" Value="{DynamicResource B2}"/>
				<Style Selector="^.Left">
					<Setter Property="DockPanel.Dock" Value="Left"/>
				</Style>
				<Style Selector="^.Right">
					<Setter Property="DockPanel.Dock" Value="Right"/>
				</Style>
			</Style>
		</Style>
		<Style Selector="TabItem">
			<Setter Property="IsVisible" Value="False"/>
		</Style>
		<Style Selector="TreeView">
			<Style Selector="^.Navigation">
				<Style Selector="^ TreeViewItem">
					<Setter Property="CornerRadius" Value="5"/>
					<Setter Property="Margin" Value="0, 5, 0, 0"/>
					<Style Selector="^.Folder">
						<Setter Property="IsHitTestVisible" Value="False"/>
					</Style>
					<Style Selector="^:pointerover /template/ Border#PART_LayoutRoot">
						<Setter Property="Background" Value="{DynamicResource A1}" />
					</Style>
					<Style Selector="^:pressed /template/ Border#PART_LayoutRoot">
						<Setter Property="Background" Value="{DynamicResource A1}" />
					</Style>
					<Style Selector="^:selected /template/ Border#PART_LayoutRoot">
						<Setter Property="Background" Value="{DynamicResource A1}" />
					</Style>
					<Style Selector="^:selected:pointerover /template/ Border#PART_LayoutRoot">
						<Setter Property="Background" Value="{DynamicResource A1}" />
					</Style>
				</Style>
			</Style>
		</Style>
	</UserControl.Styles>
	
	<Border x:Name="LeftSubmenuBorder" Classes="Submenu Left">
		<!--  IsVisible="{Binding #LeftSubmenu.IsChecked, Mode=TwoWay}" -->
		<DockPanel>
			<TabControl DockPanel.Dock="Top" Margin="10">
				<TabItem Header="Навигация"> <!-- IsSelected="{Binding #Navigation.IsChecked, Mode=TwoWay}" -->
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Spacing="5">
						<Button Height="26" Width="30"/> <!-- IsVisible="{Binding !#HandBook.IsChecked}" -->
						<!-- Новая заметка или персонаж //Нет в справочнике -->
						<Button Height="26" Width="30"/> <!-- IsVisible="{Binding !#HandBook.IsChecked}" -->
						<!-- Новая папка //Нет в справочнике -->
						<ToggleButton x:Name="SortOrderButton" Height="26" Width="30" ToolTip.Tip="Порядок сортировки" ToolTip.Placement="Bottom" ToolTip.VerticalOffset="10"/>
						<!-- Порядок сортировки -->
						<Popup x:Name="SortOrderPopup" PlacementTarget="{Binding #SortOrderButton}" Placement="BottomEdgeAlignedRight" IsOpen="{Binding #SortOrderButton.IsChecked}">
							<Border Background="#23272E" CornerRadius="5" BorderBrush="#2E343C" BorderThickness="1" Padding="10">
								<StackPanel>
									<ToggleButton Content="По имени файла (А -> Я)" HorizontalAlignment="Stretch" Background="Transparent"/>
									<ToggleButton Content="По имени файла (Я -> А)" HorizontalAlignment="Stretch" Background="Transparent"/>
									<Separator Background="#2E343C" Margin="0,5"/>
									<ToggleButton Content="По времени последнего изменения (от новых к старым)" HorizontalAlignment="Stretch" Background="Transparent"/>
									<ToggleButton Content="По времени последнего изменения (от старых к новым)" HorizontalAlignment="Stretch" Background="Transparent"/>
									<Separator Background="#2E343C" Margin="0,5"/>
									<ToggleButton Content="По времени создания (от новых к старым)" HorizontalAlignment="Stretch" Background="Transparent"/>
									<ToggleButton Content="По времени создания (от старых к новым)" HorizontalAlignment="Stretch" Background="Transparent"/>
								</StackPanel>
							</Border>
						</Popup>
						<ToggleButton Height="26" Width="30"/>
						<!-- Свернуть все -->
					</StackPanel>
				</TabItem>
				<TabItem Header="Поиск"> <!-- IsSelected="{Binding #Search.IsChecked, Mode=TwoWay}" -->
					<Grid ColumnDefinitions="*, auto">
						<Border Height="36" Background="#10FFFFFF" Margin="0,0,5,0" CornerRadius="5">
							<Grid ColumnDefinitions="auto, *, auto">
								<Svg Path="/Assets/Icons/SearchIcon.svg" Width="16" Margin="10,0"/>
								<AutoCompleteBox Grid.Column="1" Background="Transparent" CornerRadius="0" BorderThickness="0"/>
								<ToggleButton Width="30" Height="26" Grid.Column="2" Margin="5"/>
							</Grid>
						</Border>
						<ToggleButton Height="36" Width="36" Grid.Column="1"/>
					</Grid>
				</TabItem>
				<TabItem Header="Избранное"> <!-- IsSelected="{Binding #Bookmark.IsChecked, Mode=TwoWay}" -->
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Spacing="5">
						<Button Height="26" Width="30"/>
						<!-- Добавить в закладки текущую вкладку -->
						<Button Height="26" Width="30"/>
						<!-- Новая группа закладок -->
						<Button Height="26" Width="30"/>
						<!-- Свернуть все -->
					</StackPanel>
				</TabItem>
			</TabControl>
			<ScrollViewer>
				<StackPanel Orientation="Vertical">
					<Button HorizontalAlignment="Stretch" Background="Transparent" Margin="0,5">
						<TextBlock Classes="H5" Text="{Binding Treetop.Title}" DataContext="{Binding TreeDC}"/>
					</Button>

					<TreeView Classes      = "Navigation"
							  DataContext  = "{Binding TreeDC}"
							  ItemsSource  = "{Binding Treetop.Content}"
							  SelectedItem = "{Binding SelectedNode, Mode=TwoWay}" >
						<TreeView.DataTemplates>
							<TreeDataTemplate DataType="model:FolderNode" ItemsSource="{Binding Content}">
								<TextBlock Text="{Binding Title}"/>
							</TreeDataTemplate>
							<DataTemplate DataType="model:Node">
								<TextBlock Text="{Binding Title}"/>
							</DataTemplate>
						</TreeView.DataTemplates>
					</TreeView>
					
				</StackPanel>
			</ScrollViewer>
		</DockPanel>
	</Border>
</UserControl>
